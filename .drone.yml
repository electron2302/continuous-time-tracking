kind: pipeline
type: docker
name: ci

steps:
  - name: "Install dependencies"
    image: node:14
    commands:
      - cd ctt-frontend
      - npm ci

  - name: "Lint"
    image: node:14
    commands:
      - cd ctt-frontend
      - "npx ng lint"
    depends_on: ["Install dependencies"]

  - name: "Prettier"
    image: node:14
    commands:
      - cd ctt-frontend
      - "npx prettier --check ."
    depends_on: ["Install dependencies"]

  - name: "Test & Coverage"
    image: buildkite/puppeteer
    commands:
      - cd ctt-frontend
      - "npx ng test --browsers ChromeHeadlessNoSandbox --watch false --progress false --codeCoverage"
    depends_on: ["Install dependencies"]

  - name: "Docker tags"
    image: alpine
    commands:
      - echo -n "c-${DRONE_COMMIT_SHA}," > .tags
      - echo -n "${DRONE_BRANCH}" >> .tags
      - echo -n "tags are "; cat .tags ; echo
    when:
      branch:
        - main
        - develop
      event:
        - push
    depends_on: ["Test & Coverage", "Lint"]

  ######
  # CD for develop branch
  #####
  - name: "Amplify develop"
    image: node:14
    commands:
      - cd ctt-frontend
      - npm install -g @aws-amplify/cli
      - mkdir ~/.aws
      - echo "[default]" > ~/.aws/credentials
      - echo "aws_access_key_id=$KEYID" >> ~/.aws/credentials
      - echo "aws_secret_access_key=$KEYSECRET" >> ~/.aws/credentials
      - echo "[default]" > ~/.aws/config
      - echo "region=us-east-1" >> ~/.aws/config
      - npx amplify init --envName dev --yes
      - npx amplify push --yes
    environment:
      KEYID:
        from_secret: aws_access_key_id
      KEYSECRET:
        from_secret: aws_secret_access_key
    when:
      branch:
        - develop
      event:
        - push
    depends_on: ["Test & Coverage", "Lint"]

  - name: "Build develop"
    image: node:14
    commands:
      - cd ctt-frontend
      - npm run build:prod
    when:
      branch:
        - develop
      event:
        - push
    depends_on: ["Amplify develop"]

  - name: "Push develop"
    image: plugins/docker
    settings:
      repo: electron2302/ctt
      username: electron2302
      password:
        from_secret: dockerhub_secret
      dockerfile: ctt-frontend/Dockerfile
    when:
      branch:
        - develop
      event:
        - push
    depends_on: ["Build develop"]

  - name: "Publish develop"
    image: quay.io/honestbee/drone-kubernetes
    settings:
      namespace: web
      deployment: ctt-dev-deployment
      container: ctt-dev
      repo: electron2302/ctt
      tag: develop
      kubernetes_server: 
        from_secret: kubernetes_server
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      branch:
        - develop
      event:
        - push
    depends_on: ["Push develop"]

  ######
  # CD for main branch
  #####
  - name: "Amplify main"
    image: node:14
    commands:
      - cd ctt-frontend
      - npm install -g @aws-amplify/cli
      - mkdir ~/.aws
      - echo "[default]" > ~/.aws/credentials
      - echo "aws_access_key_id=$KEYID" >> ~/.aws/credentials
      - echo "aws_secret_access_key=$KEYSECRET" >> ~/.aws/credentials
      - echo "[default]" > ~/.aws/config
      - echo "region=us-east-1" >> ~/.aws/config
      - npx amplify init --envName main --yes
      - npx amplify push --yes
    environment:
      KEYID:
        from_secret: aws_access_key_id
      KEYSECRET:
        from_secret: aws_secret_access_key
    when:
      branch:
        - main
      event:
        - push
    depends_on: ["Test & Coverage", "Lint"]

  - name: "Build main"
    image: node:14
    commands:
      - cd ctt-frontend
      - npm run build:prod
    when:
      branch:
        - main
      event:
        - push
    depends_on: ["Amplify main"]

  - name: "Push main"
    image: plugins/docker
    settings:
      repo: electron2302/ctt
      username: electron2302
      password:
        from_secret: dockerhub_secret
      dockerfile: ctt-frontend/Dockerfile
    when:
      branch:
        - main
      event:
        - push
    depends_on: ["Build main"]

  - name: "Publish main"
    image: quay.io/honestbee/drone-kubernetes
    settings:
      namespace: web
      deployment: ctt-prod-deployment
      container: ctt-prod
      repo: electron2302/ctt
      tag: main
      kubernetes_server: 
        from_secret: kubernetes_server
      kubernetes_token:
        from_secret: kubernetes_token
    when:
      branch:
        - main
      event:
        - push
    depends_on: ["Push main"]
